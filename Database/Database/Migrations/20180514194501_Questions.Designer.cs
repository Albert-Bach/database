// <auto-generated />
using Database.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Database.Migrations
{
    [DbContext(typeof(QuestionContext))]
    [Migration("20180514194501_Questions")]
    partial class Questions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Models.Question", b =>
                {
                    b.Property<int?>("QuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer");

                    b.Property<string>("Date");

                    b.Property<string>("Title");

                    b.Property<long?>("UserId");

                    b.Property<long?>("UserId1");

                    b.Property<double>("VersionNumber");

                    b.HasKey("QuestionId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.Property<long?>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Models.Question", b =>
                {
                    b.HasOne("Database.Models.User", "User")
                        .WithMany("Questions")
                        .HasForeignKey("UserId");

                    b.HasOne("Database.Models.User")
                        .WithMany("AskedQuestions")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
